<?xml version="1.0" encoding="UTF-8"?>
<!-- https://logback.qos.ch/manual/layouts.html -->
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <springProperty scope="context" name="springAppName" source="spring.application.name"/>
    <springProperty scope="context" name="env" source="spring.profiles.active"/>
    <property name="console-log-pattern"
              value="%date [%level] [${HOSTNAME}] [%thread] [%X{correlationId}] [%X{operator}] %logger{50}[%L] : %X{anyLogStart}%msg%n%rEx{full} "/>

    <appender name="default-console" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="com.jkos.appsvc.api.filter.LoggerFilter"/>
        <encoder>
            <pattern>${console-log-pattern}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <appender name="json-console" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="com.jkos.appsvc.api.filter.LoggerFilter"/>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <fieldName>timestamp</fieldName>
                    <pattern>yyyy-MM-dd HH:mm:ss.SSS</pattern>
                </timestamp>
                <message>
                    <fieldName>log</fieldName>
                </message>
                <loggerName/>
                <threadName/>
                <logLevel/>
                <stackTrace/>
                <mdc/>
                <tags/>
                <callerData>
                    <classFieldName>[ignore]</classFieldName>
                    <fileFieldName>[ignore]</fileFieldName>
                    <methodFieldName>[ignore]</methodFieldName>
                    <lineFieldName>line</lineFieldName>
                </callerData>
            </providers>
        </encoder>
    </appender>

    <appender name="async" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>500</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <includeCallerData>true</includeCallerData>
        <if condition='property("env").contains("local")'>
            <then>
                <appender-ref ref="default-console"/>
            </then>
            <else>
                <appender-ref ref="json-console"/>
            </else>
        </if>
    </appender>

    <root level="info">
        <appender-ref ref="async"/>
    </root>
</configuration>